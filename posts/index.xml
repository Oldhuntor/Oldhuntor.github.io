<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Posts on My New Hugo Site</title>
    <link>https://oldhuntor.github.io/posts/</link>
    <description>Recent content in Posts on My New Hugo Site</description>
    <generator>Hugo -- 0.138.0</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 13 Nov 2024 19:12:16 +0100</lastBuildDate>
    <atom:link href="https://oldhuntor.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Backtest</title>
      <link>https://oldhuntor.github.io/posts/dirichletmultinominal/</link>
      <pubDate>Wed, 13 Nov 2024 19:12:16 +0100</pubDate>
      <guid>https://oldhuntor.github.io/posts/dirichletmultinominal/</guid>
      <description>&lt;h1 id=&#34;基于贝叶斯理论的交易策略-三&#34;&gt;基于贝叶斯理论的交易策略 （三）&lt;/h1&gt;
&lt;p&gt;上一篇&lt;a href=&#34;https://zhuanlan.zhihu.com/p/672525412&#34;&gt;文章&lt;/a&gt;我们讲了利用Gamma-Poisson共轭分布来制定交易策略，以下这篇文章我们将尝试使用更加复杂的Dirichlet-Multinominal 共轭分布。&lt;/p&gt;
&lt;h2 id=&#34;什么是dirichlet分布&#34;&gt;什么是Dirichlet分布&lt;/h2&gt;
&lt;p&gt;Dirichlet分布是由正实数向量参数化的一系列连续多元概率分布。 它经常在贝叶斯统计中用作多项分布的先验分布。 Dirichlet分布的概率密度函数的公式如下：&lt;/p&gt;
&lt;p&gt;$$
P(\mathbf{x} \mid \boldsymbol{\alpha}) = \frac{1}{B(\boldsymbol{\alpha})} \prod_{i=1}^{K} x_i^{\alpha_i - 1}
$$&lt;/p&gt;
&lt;p&gt;其中$\mathbf{x} = (x_1, \ldots, x_K)$是一个 K 维向量，表示 K 个不同类别或事件的概率。 这些概率之和必须为 1，&lt;/p&gt;
&lt;p&gt;$\boldsymbol{\alpha} = (\alpha_1, \ldots, \alpha_K)$是一个正参数向量，$\alpha_i$代表了第$i$个类别的先验，或者说计数。&lt;/p&gt;
&lt;p&gt;$\beta(\alpha)$是多项式Beta函数，作为归一化常数，保证总概率积分为1。定义为：$B(\boldsymbol{\alpha}) = \frac{\prod_{i=1}^{K} \Gamma(\alpha_i)}{\Gamma\left(\sum_{i=1}^{K} \alpha_i\right)}$，在这个公式中$\Γ$表示Gamma函数，它是阶乘函数（其参数向下移动 1）到实数和复数的扩展。&lt;/p&gt;
&lt;p&gt;Dirichlet分布是 Beta 分布向更高维度的推广。 在二维情况下（K=2），Dirichlet分布简化为 Beta 分布。&lt;/p&gt;
&lt;h2 id=&#34;什么是multinomial多项分布&#34;&gt;什么是Multinomial(多项分布)&lt;/h2&gt;
&lt;p&gt;多项分布是二项分布对两个以上类别的推广。 它描述了滚动 n 次 K 面骰子每一面可能计数的概率。 简单来说，它是固定次数试验中多个类别计数的分布。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;特点：&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;类别：有 K 种可能的结果或类别。&lt;/li&gt;
&lt;li&gt;试验：有 n 个独立试验。&lt;/li&gt;
&lt;li&gt;概率：每次试验都恰好产生 K 个类别中的一个。 每次试验的每个类别的概率都是固定的，并表示为：$p_1,p_2,\dots,p_k$，其中$∑p_i=1$&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Probability Mass Function&lt;/strong&gt;(PMF):
给定结果$x=(x_1,x_2,\dots,x_K)$的多项分布的pmf为：
$$P(X = x) = \frac{n!}{x_1! x_2! \ldots x_K!} p_1^{x_1} p_2^{x_2} \ldots p_K^{x_K}
$$
其中，$x_i$为$i$类别的计数，且$\sum^{K}&lt;em&gt;{i=1} x&lt;/em&gt;{i}=n$。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Backtest</title>
      <link>https://oldhuntor.github.io/posts/backtest/</link>
      <pubDate>Wed, 13 Nov 2024 18:59:16 +0100</pubDate>
      <guid>https://oldhuntor.github.io/posts/backtest/</guid>
      <description>&lt;p&gt;my first posts&lt;/p&gt;
&lt;p&gt;testing&lt;/p&gt;</description>
    </item>
    <item>
      <title>Mypost</title>
      <link>https://oldhuntor.github.io/posts/mypost/</link>
      <pubDate>Wed, 13 Nov 2024 18:46:31 +0100</pubDate>
      <guid>https://oldhuntor.github.io/posts/mypost/</guid>
      <description>&lt;p&gt;asldfjaslkdjflaskd&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
